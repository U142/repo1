//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace UmsPas.be.wdmb.ws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DTrixSoap", Namespace="www.d-trix.com/ws")]
    public partial class DTrix : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback runOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNewPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback runJSONOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DTrix() {
            this.Url = global::UmsPas.Properties.Settings.Default.UmsPas_be_wdmb_ws_DTrix;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event runCompletedEventHandler runCompleted;
        
        /// <remarks/>
        public event SendNewPasswordCompletedEventHandler SendNewPasswordCompleted;
        
        /// <remarks/>
        public event runJSONCompletedEventHandler runJSONCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.d-trix.com/ws/run", RequestNamespace="www.d-trix.com/ws", ResponseNamespace="www.d-trix.com/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode run(System.Xml.XmlNode input) {
            object[] results = this.Invoke("run", new object[] {
                        input});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void runAsync(System.Xml.XmlNode input) {
            this.runAsync(input, null);
        }
        
        /// <remarks/>
        public void runAsync(System.Xml.XmlNode input, object userState) {
            if ((this.runOperationCompleted == null)) {
                this.runOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunOperationCompleted);
            }
            this.InvokeAsync("run", new object[] {
                        input}, this.runOperationCompleted, userState);
        }
        
        private void OnrunOperationCompleted(object arg) {
            if ((this.runCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCompleted(this, new runCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.d-trix.com/ws/SendNewPassword", RequestNamespace="www.d-trix.com/ws", ResponseNamespace="www.d-trix.com/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SendNewPassword(System.Xml.XmlNode input) {
            object[] results = this.Invoke("SendNewPassword", new object[] {
                        input});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SendNewPasswordAsync(System.Xml.XmlNode input) {
            this.SendNewPasswordAsync(input, null);
        }
        
        /// <remarks/>
        public void SendNewPasswordAsync(System.Xml.XmlNode input, object userState) {
            if ((this.SendNewPasswordOperationCompleted == null)) {
                this.SendNewPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNewPasswordOperationCompleted);
            }
            this.InvokeAsync("SendNewPassword", new object[] {
                        input}, this.SendNewPasswordOperationCompleted, userState);
        }
        
        private void OnSendNewPasswordOperationCompleted(object arg) {
            if ((this.SendNewPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNewPasswordCompleted(this, new SendNewPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.d-trix.com/ws/runJSON", RequestNamespace="www.d-trix.com/ws", ResponseNamespace="www.d-trix.com/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string runJSON(System.Xml.XmlNode input) {
            object[] results = this.Invoke("runJSON", new object[] {
                        input});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void runJSONAsync(System.Xml.XmlNode input) {
            this.runJSONAsync(input, null);
        }
        
        /// <remarks/>
        public void runJSONAsync(System.Xml.XmlNode input, object userState) {
            if ((this.runJSONOperationCompleted == null)) {
                this.runJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunJSONOperationCompleted);
            }
            this.InvokeAsync("runJSON", new object[] {
                        input}, this.runJSONOperationCompleted, userState);
        }
        
        private void OnrunJSONOperationCompleted(object arg) {
            if ((this.runJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runJSONCompleted(this, new runJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runCompletedEventHandler(object sender, runCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendNewPasswordCompletedEventHandler(object sender, SendNewPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNewPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNewPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void runJSONCompletedEventHandler(object sender, runJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591